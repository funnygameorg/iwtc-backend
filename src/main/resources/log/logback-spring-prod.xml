<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanReriod="60 seconds" >



    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>

    <!-- 변수 설정 -->
    <property name="LOG_PATTERN" value="[%-5level] [%X{request_id}] %msg%n" />

    <springProperty name="AWS_ACCESS_KEY" source="cloud.aws.credentials.cloud-watch.access-key"/>
    <springProperty name="AWS_SECRET_KEY" source="cloud.aws.credentials.cloud-watch.secret-key"/>


    <appender name="console" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d %p [%c{5}] %m [%X{userId}]%n" />
        </layout>
    </appender>



    <!-- INFO CONSOLE -->
    <appender name="AWS_INFO" class="ca.pjer.logback.AwsLogsAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <encoder>
            <pattern>
                ${LOG_PATTERN}
            </pattern>
        </encoder>

        <logGroupName>itwc-log</logGroupName>
        <logStreamUuidPrefix>info-log-</logStreamUuidPrefix>
        <logRegion>ap-northeast-2</logRegion>
        <maxBatchLogEvents>10</maxBatchLogEvents>
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>
        <retentionTimeDays>0</retentionTimeDays>
        <accessKeyId>${AWS_ACCESS_KEY}</accessKeyId>
        <secretAccessKey>${AWS_SECRET_KEY}</secretAccessKey>
    </appender>



    <!-- WARN CONSOLE -->
    <appender name="AWS_WARN" class="ca.pjer.logback.AwsLogsAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>
                ${LOG_PATTERN}
            </pattern>
        </encoder>

        <logGroupName>itwc-log</logGroupName>
        <logStreamUuidPrefix>warn-log-</logStreamUuidPrefix>
        <logRegion>ap-northeast-2</logRegion>
        <maxBatchLogEvents>50</maxBatchLogEvents>
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>
        <retentionTimeDays>0</retentionTimeDays>
        <accessKeyId>${AWS_ACCESS_KEY}</accessKeyId>
        <secretAccessKey>${AWS_SECRET_KEY}</secretAccessKey>
    </appender>



    <!-- ERR CONSOLE -->
    <appender name="AWS_ERROR" class="ca.pjer.logback.AwsLogsAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>
                ${LOG_PATTERN}
            </pattern>
        </encoder>

        <logGroupName>itwc-log</logGroupName>
        <logStreamUuidPrefix>error-log-</logStreamUuidPrefix>
        <logRegion>ap-northeast-2</logRegion>
        <maxBatchLogEvents>50</maxBatchLogEvents>
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>
        <retentionTimeDays>0</retentionTimeDays>
        <accessKeyId>${AWS_ACCESS_KEY}</accessKeyId>
        <secretAccessKey>${AWS_SECRET_KEY}</secretAccessKey>
    </appender>


    <!-- 기본 출력-->
    <root level="DEBUG">
        <appender-ref ref="AWS_INFO" />
        <appender-ref ref="AWS_WARN" />
        <appender-ref ref="AWS_ERROR" />
    </root>

    <!-- S3와 통신할 때 정보 출력에 사용, 데이터가 너무 커서 로그 읽기가 힘들다.-->
    <logger name="org.apache.http">
        <level value="warn" />
    </logger>

</configuration>