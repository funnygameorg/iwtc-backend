name: Deploy to Amazon ECS

on:
  push:
    branches: [ "prod" ]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: itwc-backend-repo
  ECS_SERVICE: itwc-service
  ECS_CLUSTER: itwc-back-ecs-cluster
  ECS_TASK_DEFINITION: server-task:1
  CONTAINER_NAME: server-container

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/y5m8k5s2
          docker build --build-arg SPRING_PROFILES_ACTIVE=prod -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG public.ecr.aws/y5m8k5s2/itwc-backend-repo:$IMAGE_TAG
          docker push public.ecr.aws/y5m8k5s2/itwc-backend-repo:$IMAGE_TAG
          echo "image=public.ecr.aws/y5m8k5s2/itwc-backend-repo:$IMAGE_TAG" >> $GITHUB_OUTPUT
