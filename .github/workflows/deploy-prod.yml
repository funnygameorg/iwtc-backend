name: Deploy ECR And EB

on:
  push:
    branches: [ "prod" ]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: itwc-backend-repo
  EB_APP_NAME: itwc-back
  EB_ENV_NAME: Itwc-backend-env

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Docker image ECR에 푸쉬
      - name: Build and push image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/y5m8k5s2
          docker build --build-arg SPRING_PROFILES_ACTIVE=prod -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG public.ecr.aws/y5m8k5s2/itwc-backend-repo
          docker push public.ecr.aws/y5m8k5s2/itwc-backend-repo
          echo "image=public.ecr.aws/y5m8k5s2/itwc-backend-repo" >> $GITHUB_OUTPUT

      # 배포 파일 압축
      - name: compress files
        run: zip -r deploy.zip Dockerrun.aws.json .platform/nginx/conf.d

      # 엘라스틱 빈스톡 배포
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_EB_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_EB_SECRET_KEY_ID }}
          application_name: ${{ env.EB_APP_NAME }}
          environment_name: ${{ env.EB_ENV_NAME }}
          version_label: ${{ github.sha }}
          region: ${{ env.AWS_REGION }}
          deployment_package: deploy.zip
          wait_for_environment_recovery: 50
